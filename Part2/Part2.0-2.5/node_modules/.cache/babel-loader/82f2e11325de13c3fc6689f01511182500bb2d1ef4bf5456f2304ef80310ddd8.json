{"ast":null,"code":"var _jsxFileName = \"/Users/christianhirales/WebstormProjects/react-projects/full-stack-js/Full-Stack-Javascript-Course/full_js/src/Unicaf.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Give Feedback\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = Header;\nconst Buttons = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Buttons;\nconst Stats = props => {\n  const total = props.good + props.neutral + props.bad;\n  const average = (props.good - props.bad) / total;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", props.good / total * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Stats;\nconst Unicaf = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      handleGood: () => setGood(good + 1),\n      handleNeutral: () => setNeutral(neutral + 1),\n      handleBad: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Unicaf, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = Unicaf;\nexport default Unicaf;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Buttons\");\n$RefreshReg$(_c3, \"Stats\");\n$RefreshReg$(_c4, \"Unicaf\");","map":{"version":3,"names":["useState","Header","Buttons","props","handleGood","handleNeutral","handleBad","Stats","total","good","neutral","bad","average","Unicaf","setGood","setNeutral","setBad"],"sources":["/Users/christianhirales/WebstormProjects/react-projects/full-stack-js/Full-Stack-Javascript-Course/full_js/src/Unicaf.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst Header = () => {\n    return(\n        <h1>Give Feedback</h1>\n    );\n}\nconst Buttons = (props) => {\n    return(\n    <div>\n        <button onClick={props.handleGood}>good</button>\n        <button onClick={props.handleNeutral}>neutral</button>\n        <button onClick={props.handleBad}>bad</button>\n    </div>\n    );\n}\n\nconst Stats = (props) => {\n    const total = props.good + props.neutral + props.bad\n    const average = (props.good - props.bad) / total\n    return(\n        <div>\n            <h1>Statistics</h1>\n            <p>good {props.good}</p>\n            <p>neutral {props.neutral}</p>\n            <p>bad {props.bad}</p>\n            <p>all {total}</p>\n            <p>average {average}</p>\n            <p>positive {(props.good / total) * 100}%</p>\n        </div>\n    );\n}\n\nconst Unicaf = () => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    return(\n        <div>\n            <Header />\n            <Buttons handleGood = {() => setGood(good + 1)}\n                     handleNeutral={() => setNeutral(neutral + 1)}\n                     handleBad={() => setBad(bad + 1)}\n            />\n            <Stats good={good} neutral={neutral} bad={bad} />\n        </div>\n    );\n}\nexport default Unicaf\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC;AAE/B,MAAMC,MAAM,GAAG,MAAM;EACjB,oBACI;IAAA,UAAI;EAAa;IAAA;IAAA;IAAA;EAAA,QAAK;AAE9B,CAAC;AAAA,KAJKA,MAAM;AAKZ,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB,oBACA;IAAA,wBACI;MAAQ,OAAO,EAAEA,KAAK,CAACC,UAAW;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAChD;MAAQ,OAAO,EAAED,KAAK,CAACE,aAAc;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eACtD;MAAQ,OAAO,EAAEF,KAAK,CAACG,SAAU;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEV,CAAC;AAAA,MARKJ,OAAO;AAUb,MAAMK,KAAK,GAAIJ,KAAK,IAAK;EACrB,MAAMK,KAAK,GAAGL,KAAK,CAACM,IAAI,GAAGN,KAAK,CAACO,OAAO,GAAGP,KAAK,CAACQ,GAAG;EACpD,MAAMC,OAAO,GAAG,CAACT,KAAK,CAACM,IAAI,GAAGN,KAAK,CAACQ,GAAG,IAAIH,KAAK;EAChD,oBACI;IAAA,wBACI;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAA,WAAG,OAAK,EAACL,KAAK,CAACM,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,WAAG,UAAQ,EAACN,KAAK,CAACO,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9B;MAAA,WAAG,MAAI,EAACP,KAAK,CAACQ,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,WAAG,MAAI,EAACH,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA,WAAG,UAAQ,EAACI,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,WAAG,WAAS,EAAET,KAAK,CAACM,IAAI,GAAGD,KAAK,GAAI,GAAG,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEd,CAAC;AAAA,MAdKD,KAAK;AAgBX,MAAMM,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACJ,IAAI,EAAEK,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACU,OAAO,EAAEK,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,GAAG,EAAEK,MAAM,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAEjC,oBACI;IAAA,wBACI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,OAAO;MAAC,UAAU,EAAI,MAAMc,OAAO,CAACL,IAAI,GAAG,CAAC,CAAE;MACtC,aAAa,EAAE,MAAMM,UAAU,CAACL,OAAO,GAAG,CAAC,CAAE;MAC7C,SAAS,EAAE,MAAMM,MAAM,CAACL,GAAG,GAAG,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QACxC,eACF,QAAC,KAAK;MAAC,IAAI,EAAEF,IAAK;MAAC,OAAO,EAAEC,OAAQ;MAAC,GAAG,EAAEC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/C;AAEd,CAAC;AAAA,GAfKE,MAAM;AAAA,MAANA,MAAM;AAgBZ,eAAeA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}