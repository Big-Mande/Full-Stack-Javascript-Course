{"ast":null,"code":"var _jsxFileName = \"/Users/christianhirales/WebstormProjects/react-projects/full-stack-js/Full-Stack-Javascript-Course/full_js/src/2-1.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Courses, {\n    courses: courses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n// this should take in a courses array and return each course and info\n_c = App;\nconst Courses = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      props: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_c2 = Courses;\nconst Course = _ref2 => {\n  let {} = _ref2;\n};\n_c3 = Course;\nconst Header = _ref3 => {\n  let {\n    name\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n_c4 = Header;\nconst Part = _ref4 => {\n  let {\n    name,\n    exercises\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [name, \" \", exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_c5 = Part;\nconst Total = _ref5 => {\n  let {\n    parts\n  } = _ref5;\n  let sum = 0;\n  parts.forEach(x => {\n    sum += x.exercises;\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"total of \", sum, \" exercises\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n_c6 = Total;\nconst Content = _ref6 => {\n  let {\n    props\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.parts.map((e, i) => {\n      return /*#__PURE__*/_jsxDEV(Part, {\n        name: e.name,\n        exercises: e.exercises\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Total, {\n      parts: props.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_c7 = Content;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Courses\");\n$RefreshReg$(_c3, \"Course\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"Part\");\n$RefreshReg$(_c6, \"Total\");\n$RefreshReg$(_c7, \"Content\");","map":{"version":3,"names":["App","courses","name","id","parts","exercises","Courses","course","Course","Header","Part","Total","sum","forEach","x","Content","props","map","e","i"],"sources":["/Users/christianhirales/WebstormProjects/react-projects/full-stack-js/Full-Stack-Javascript-Course/full_js/src/2-1.js"],"sourcesContent":["const App = () => {\n    const courses = [\n        {\n            name: 'Half Stack application development',\n            id: 1,\n            parts: [\n                {\n                    name: 'Fundamentals of React',\n                    exercises: 10,\n                    id: 1\n                },\n                {\n                    name: 'Using props to pass data',\n                    exercises: 7,\n                    id: 2\n                },\n                {\n                    name: 'State of a component',\n                    exercises: 14,\n                    id: 3\n                },\n                {\n                    name: 'Redux',\n                    exercises: 11,\n                    id: 4\n                }\n            ]\n        },\n        {\n            name: 'Node.js',\n            id: 2,\n            parts: [\n                {\n                    name: 'Routing',\n                    exercises: 3,\n                    id: 1\n                },\n                {\n                    name: 'Middlewares',\n                    exercises: 7,\n                    id: 2\n                }\n            ]\n        }\n    ]\n\n    return <Courses courses={courses} />\n}\n\n// this should take in a courses array and return each course and info\nconst Courses = ({course}) => {\n    return <div>\n        <Header name = {course.name}/>\n        <Content props = {course}/>\n    </div>\n}\n\nconst Course = ({})=>{\n    \n}\n\nconst Header = ({name}) =>{\n    return <h1>{name}</h1>;\n}\n\nconst Part = ({name, exercises}) => {\n    return(\n        <p>{name} {exercises}</p>\n    );\n}\nconst Total = ({parts}) => {\n    let sum = 0;\n    parts.forEach((x)=>{\n        sum += x.exercises;\n    });\n    return <p>total of {sum} exercises</p>\n}\n\nconst Content = ({props}) => {\n    return (\n        <div>\n            {props.parts.map((e, i) => {\n                return <Part key={i} name={e.name} exercises={e.exercises} />\n            })}\n            <Total parts={props.parts}/>\n        </div>\n    );\n}\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}